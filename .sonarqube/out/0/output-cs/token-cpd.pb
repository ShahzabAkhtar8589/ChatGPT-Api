·
VC:\Users\shahzab.akhtar\Desktop\ChatGPT-Api\ChatGPT-Api\Services\OpenAIConversation.cs
public 
class 
OpenAIConversation 
{ 
private		 
readonly		 
	OpenAIAPI		 
_api		 #
;		# $
private

 
readonly

 
List

 
<

 
ChatMessage

 %
>

% &
	_messages

' 0
;

0 1
public 

OpenAIConversation 
( 
string $
apiKey% +
,+ ,
string- 3
initialContext4 B
)B C
{ 
_api 
= 
new 
	OpenAIAPI 
( 
apiKey #
)# $
;$ %
	_messages 
= 
new 
List 
< 
ChatMessage (
>( )
{ 	
new 
ChatMessage 
( 
ChatMessageRole +
.+ ,
System, 2
,2 3
initialContext4 B
)B C
} 	
;	 

} 
public 

async 
Task 
< 
string 
> 
StartConversation /
(/ 0
)0 1
{ 
var 
chatRequest 
= 
new 
ChatRequest )
{ 	
Model 
= 

OpenAI_API 
. 
Models %
.% &
Model& +
.+ ,
ChatGPTTurbo, 8
,8 9
Messages 
= 
	_messages  
} 	
;	 

var 
result 
= 
await 
_api 
.  
Chat  $
.$ %%
CreateChatCompletionAsync% >
(> ?
chatRequest? J
)J K
;K L
	_messages 
. 
Add 
( 
result 
. 
Choices $
[$ %
$num% &
]& '
.' (
Message( /
)/ 0
;0 1
return   
result   
.   
Choices   
[   
$num   
]    
.    !
Message  ! (
.  ( )
Content  ) 0
;  0 1
}!! 
public## 

async## 
Task## 
<## 
string## 
>##  
ContinueConversation## 2
(##2 3
string##3 9
	userInput##: C
)##C D
{$$ 
	_messages&& 
.&& 
Add&& 
(&& 
new&& 
ChatMessage&& %
(&&% &
ChatMessageRole&&& 5
.&&5 6
User&&6 :
,&&: ;
	userInput&&< E
)&&E F
)&&F G
;&&G H
var(( 
chatRequest(( 
=(( 
new(( 
ChatRequest(( )
{)) 	
Model** 
=** 

OpenAI_API** 
.** 
Models** %
.**% &
Model**& +
.**+ ,
ChatGPTTurbo**, 8
,**8 9
Messages++ 
=++ 
	_messages++  
},, 	
;,,	 

var.. 
result.. 
=.. 
await.. 
_api.. 
...  
Chat..  $
...$ %%
CreateChatCompletionAsync..% >
(..> ?
chatRequest..? J
)..J K
;..K L
	_messages00 
.00 
Add00 
(00 
result00 
.00 
Choices00 $
[00$ %
$num00% &
]00& '
.00' (
Message00( /
)00/ 0
;000 1
return11 
result11 
.11 
Choices11 
[11 
$num11 
]11  
.11  !
Message11! (
.11( )
Content11) 0
;110 1
}22 
}33 ×
PC:\Users\shahzab.akhtar\Desktop\ChatGPT-Api\ChatGPT-Api\Services\OpenAIClient.cs
public 
class 
OpenAIClient 
{		 
private

 
readonly

 
string

 
_apiKey

 #
;

# $
private 
readonly 
string 
_apiUrl #
;# $
public 

OpenAIClient 
( 
string 
apiKey %
)% &
{ 
_apiKey 
= 
apiKey 
; 
_apiUrl 
= 
$str >
;> ?
} 
public 

async 
Task 
< 
string 
> 
SendMessage )
() *
string* 0
	userInput1 :
): ;
{ 
using 
( 
var 
client 
= 
new 

HttpClient  *
(* +
)+ ,
), -
{ 	
client 
. !
DefaultRequestHeaders (
.( )
Authorization) 6
=7 8
new9 <%
AuthenticationHeaderValue= V
(V W
$strW _
,_ `
_apiKeya h
)h i
;i j
var 
requestBody 
= 
new !
{ 
model 
= 
$str '
,' (
messages 
= 
new 
[ 
]  
{ 
new 
{ 
role 
=  
$str! '
,' (
content) 0
=1 2
	userInput3 <
}= >
} 
}   
;   
var"" 
content"" 
="" 
new"" 
StringContent"" +
(""+ ,
JsonConvert"", 7
.""7 8
SerializeObject""8 G
(""G H
requestBody""H S
)""S T
,""T U
Encoding""V ^
.""^ _
UTF8""_ c
,""c d
$str""e w
)""w x
;""x y
var## 
response## 
=## 
await##  
client##! '
.##' (
	PostAsync##( 1
(##1 2
_apiUrl##2 9
,##9 :
content##; B
)##B C
;##C D
response%% 
.%% #
EnsureSuccessStatusCode%% ,
(%%, -
)%%- .
;%%. /
var&& 
responseContent&& 
=&&  !
await&&" '
response&&( 0
.&&0 1
Content&&1 8
.&&8 9
ReadAsStringAsync&&9 J
(&&J K
)&&K L
;&&L M
dynamic'' 
jsonResponse''  
=''! "
JsonConvert''# .
.''. /
DeserializeObject''/ @
(''@ A
responseContent''A P
)''P Q
;''Q R
return(( 
jsonResponse(( 
.((  
choices((  '
[((' (
$num((( )
](() *
.((* +
message((+ 2
.((2 3
content((3 :
.((: ;
ToString((; C
(((C D
)((D E
;((E F
})) 	
}** 
}++ ú5
KC:\Users\shahzab.akhtar\Desktop\ChatGPT-Api\ChatGPT-Api\Services\ChatGPT.cs
	namespace 	
ChatGPT_Api
 
. 
Services 
{ 
public 

class 
ChatGPT 
: 
IChatGPT #
{ 
private 
static 
readonly 

HttpClient  *
client+ 1
=2 3
new4 7

HttpClient8 B
(B C
)C D
;D E
private 
readonly 
IConfiguration '
Configuration( 5
;5 6
private 
readonly 
LoggingContext '
_context( 0
;0 1
public 
ChatGPT 
( 
IConfiguration %
configuration& 3
,3 4
LoggingContext5 C
contextD K
)K L
{ 	
Configuration 
= 
configuration )
;) *
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
string  
>  !

UseChatGPT" ,
(, -
string- 3
query4 9
)9 :
{ 	
var 
requestBody 
= 
new !
{ 
model 
= 
$str +
,+ ,
messages 
= 
new 
[ 
]  
{ 	
new   
{!! 
role"" 
="" 
$str"" 
,""  
content## 
=## 
new## 
[## 
]## 
{$$ 
new%% 
{&& 
type'' 
='' 
$str'' %
,''% &
text(( 
=(( 
$str(( z
})) 
}** 
}++ 
,++ 
new,, 
{-- 
role.. 
=.. 
$str.. 
,.. 
content// 
=// 
new// 
[// 
]// 
{00 
new11 
{22 
type33 
=33 
$str33 %
,33% &
text44 
=44 
query44 $
}55 
}66 
}77 
}88 	
,88	 

temperature99 
=99 
$num99 !
,99! "
frequency_penalty:: !
=::" #
$num::$ %
,::% &
presence_penalty;;  
=;;! "
$num;;# $
}== 
;== 
var>> 
apiKey>> 
=>> 
Configuration>> &
[>>& '
$str>>' /
]>>/ 0
;>>0 1
try?? 
{@@ 
usingAA 
(AA 
varAA 
clientAA !
=AA" #
newAA$ '

HttpClientAA( 2
(AA2 3
)AA3 4
)AA4 5
{BB 
clientCC 
.CC !
DefaultRequestHeadersCC 0
.CC0 1
ClearCC1 6
(CC6 7
)CC7 8
;CC8 9
clientDD 
.DD !
DefaultRequestHeadersDD 0
.DD0 1
AddDD1 4
(DD4 5
$strDD5 D
,DDD E
$"DDF H
$strDDH O
{DDO P
apiKeyDDP V
}DDV W
"DDW X
)DDX Y
;DDY Z
varEE 
contentEE 
=EE  !
newEE" %
StringContentEE& 3
(EE3 4
JsonConvertEE4 ?
.EE? @
SerializeObjectEE@ O
(EEO P
requestBodyEEP [
)EE[ \
,EE\ ]
EncodingEE^ f
.EEf g
UTF8EEg k
,EEk l
$strEEm 
)	EE 
;
EE 
varFF 
responseFF  
=FF! "
awaitFF# (
clientFF) /
.FF/ 0
	PostAsyncFF0 9
(FF9 :
$strFF: f
,FFf g
contentFFh o
)FFo p
;FFp q
varGG 
responseStringGG &
=GG' (
awaitGG) .
responseGG/ 7
.GG7 8
ContentGG8 ?
.GG? @
ReadAsStringAsyncGG@ Q
(GGQ R
)GGR S
;GGS T
ChatCompletionHH "
responseObjectHH# 1
=HH2 3
JsonConvertHH4 ?
.HH? @
DeserializeObjectHH@ Q
<HHQ R
ChatCompletionHHR `
>HH` a
(HHa b
responseStringHHb p
)HHp q
;HHq r
returnLL 
responseObjectLL )
.LL) *
ChoicesLL* 1
[LL1 2
$numLL2 3
]LL3 4
.LL4 5
MessageLL5 <
.LL< =
ContentLL= D
;LLD E
}MM 
}NN 
catchOO 
(OO 
	ExceptionOO 
exOO 
)OO  
{PP 
awaitQQ #
LogChatInteractionAsyncQQ -
(QQ- .
JsonConvertQQ. 9
.QQ9 :
SerializeObjectQQ: I
(QQI J
requestBodyQQJ U
)QQU V
,QQV W
$strQQX n
,QQn o
exQQp r
)QQr s
;QQs t
returnRR 
$strRR  
+RR! "
exRR# %
.RR% &
MessageRR& -
;RR- .
}SS 
}VV 	
publicWW 
asyncWW 
TaskWW #
LogChatInteractionAsyncWW 1
(WW1 2
stringWW2 8
requestWW9 @
,WW@ A
stringWWB H
responseWWI Q
,WWQ R
	ExceptionWWS \
exWW] _
=WW` a
nullWWb f
)WWf g
{XX 	
tryYY 
{ZZ 
var[[ 
log[[ 
=[[ 
new[[ 

ChatGPTLog[[ (
{\\ 
	Timestamp]] 
=]] 
DateTime]]  (
.]]( )
UtcNow]]) /
,]]/ 0
Request^^ 
=^^ 
request^^ %
,^^% &
Response__ 
=__ 
response__ '
,__' (
Message`` 
=`` 
ex``  
?``  !
.``! "
Message``" )
,``) *

StackTraceaa 
=aa  
exaa! #
?aa# $
.aa$ %

StackTraceaa% /
}bb 
;bb 
_contextdd 
.dd 
ChatGPTLogsdd $
.dd$ %
Adddd% (
(dd( )
logdd) ,
)dd, -
;dd- .
awaitee 
_contextee 
.ee 
SaveChangesAsyncee /
(ee/ 0
)ee0 1
;ee1 2
}gg 
catchhh 
(hh 
	Exceptionhh 
ehh 
)hh 
{ii 
Consolejj 
.jj 
	WriteLinejj !
(jj! "
ejj" #
.jj# $
Messagejj$ +
)jj+ ,
;jj, -
}kk 
}nn 	
}pp 
}qq 
BC:\Users\shahzab.akhtar\Desktop\ChatGPT-Api\ChatGPT-Api\Program.cs
var		 
builder		 
=		 
WebApplication		 
.		 
CreateBuilder		 *
(		* +
args		+ /
)		/ 0
;		0 1
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
)  
;  !
builder 
. 
Services 
. 
	AddScoped 
< 
IChatGPT #
,# $
ChatGPT_Api% 0
.0 1
Services1 9
.9 :
ChatGPT: A
>A B
(B C
)C D
;D E
builder 
. 
Services 
. 
AddDbContext 
< 
LoggingContext ,
>, -
(- .
). /
;/ 0
var 
app 
= 	
builder
 
. 
Build 
( 
) 
; 
if 
( 
app 
. 
Environment 
. 
IsDevelopment !
(! "
)" #
)# $
{ 
app 
. 

UseSwagger 
( 
) 
; 
app 
. 
UseSwaggerUI 
( 
) 
; 
} 
app 
. 
UseHttpsRedirection 
( 
) 
; 
app 
. 
UseMiddleware 
< 
AuthenticationApi #
># $
($ %
)% &
;& '
app 
. 
UseAuthorization 
( 
) 
; 
app   
.   
MapControllers   
(   
)   
;   
app"" 
."" 
Run"" 
("" 
)"" 	
;""	 
¿

DC:\Users\shahzab.akhtar\Desktop\ChatGPT-Api\ChatGPT-Api\Model\Log.cs
	namespace 	
ChatGPT_Api
 
. 
Model 
{ 
[ 
Table 

(
 
$str 
) 
] 
public 

class 

ChatGPTLog 
{ 
[		 	
Key			 
]		 
public

 
int

 
Id

 
{

 
get

 
;

 
set

  
;

  !
}

" #
public 
DateTime 
	Timestamp !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Request 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Response 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Message 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 

StackTrace  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} Õ
GC:\Users\shahzab.akhtar\Desktop\ChatGPT-Api\ChatGPT-Api\Model\Config.cs
	namespace 	
ChatGPT_Api
 
. 
Model 
{ 
public 

static 
class 
ChatGPTConfig %
{ 
public 
static 
string 
ApiKey #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
} 
OC:\Users\shahzab.akhtar\Desktop\ChatGPT-Api\ChatGPT-Api\Model\ChatCompletion.cs
	namespace 	
ChatGPT_Api
 
. 
Model 
{ 
public 

class 
Choice 
{ 
public 
int 
Index 
{ 
get 
; 
set  #
;# $
}% &
public 
Message 
Message 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
object 
Logprobs 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
FinishReason "
{# $
get% (
;( )
set* -
;- .
}/ 0
}		 
public 

class 
Message 
{ 
public 
string 
Role 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Content 
{ 
get  #
;# $
set% (
;( )
}* +
} 
public 

class 
Usage 
{ 
public 
int 
PromptTokens 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
CompletionTokens #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
TotalTokens 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
public 

class 
ChatCompletion 
{ 
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Object 
{ 
get "
;" #
set$ '
;' (
}) *
public 
long 
Created 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Model 
{ 
get !
;! "
set# &
;& '
}( )
public 
List 
< 
Choice 
> 
Choices #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
Usage 
Usage 
{ 
get  
;  !
set" %
;% &
}' (
public   
object   
SystemFingerprint   '
{  ( )
get  * -
;  - .
set  / 2
;  2 3
}  4 5
}!! 
}## ×
TC:\Users\shahzab.akhtar\Desktop\ChatGPT-Api\ChatGPT-Api\Middleware\Authentication.cs
	namespace 	
ChatGPT_Api
 
. 

Middleware  
{ 
public 

class 
AuthenticationApi "
{		 
private

 
readonly

 
RequestDelegate

 (
_next

) .
;

. /
private 
const 
string 
API_KEY_HEADER_NAME 0
=1 2
$str3 F
;F G
public 
AuthenticationApi  
(  !
RequestDelegate! 0
next1 5
)5 6
{ 	
_next 
= 
next 
; 
} 	
public 
async 
Task 
Invoke  
(  !
HttpContext! ,
httpContext- 8
,8 9
IConfiguration: H
configurationI V
)V W
{ 	
if 
( 
! 
httpContext 
. 
Request $
.$ %
Headers% ,
., -
TryGetValue- 8
(8 9
API_KEY_HEADER_NAME9 L
,L M
outN Q
varR U
extractedApiKeyV e
)e f
)f g
{ 
httpContext 
. 
Response $
.$ %

StatusCode% /
=0 1
$num2 5
;5 6
await 
httpContext !
.! "
Response" *
.* +

WriteAsync+ 5
(5 6
$str6 Q
)Q R
;R S
return 
; 
} 
var 
apiKey 
= 
configuration &
.& '
GetValue' /
</ 0
string0 6
>6 7
(7 8
$str8 K
)K L
;L M
if 
( 
! 
apiKey 
. 
Equals 
( 
extractedApiKey .
.. /
First/ 4
(4 5
)5 6
)6 7
)7 8
{ 
httpContext   
.   
Response   $
.  $ %

StatusCode  % /
=  0 1
$num  2 5
;  5 6
await!! 
httpContext!! !
.!!! "
Response!!" *
.!!* +

WriteAsync!!+ 5
(!!5 6
$str!!6 L
)!!L M
;!!M N
return"" 
;"" 
}## 
await%% 
_next%% 
(%% 
httpContext%% #
)%%# $
;%%$ %
}&& 	
}'' 
public** 

static** 
class** $
AuthenticationExtensions** 0
{++ 
public,, 
static,, 
IApplicationBuilder,, )
UseAuthentication,,* ;
(,,; <
this,,< @
IApplicationBuilder,,A T
builder,,U \
),,\ ]
{-- 	
return.. 
builder.. 
... 
UseMiddleware.. (
<..( )
AuthenticationApi..) :
>..: ;
(..; <
)..< =
;..= >
}// 	
}00 
}11 Ì
MC:\Users\shahzab.akhtar\Desktop\ChatGPT-Api\ChatGPT-Api\Interface\IChatGPT.cs
	namespace 	
ChatGPT_Api
 
. 
	Interface 
{ 
public 

	interface 
IChatGPT 
{ 
Task 
< 
string 
> 

UseChatGPT 
(  
string  &
query' ,
), -
;- .
} 
} Ø
SC:\Users\shahzab.akhtar\Desktop\ChatGPT-Api\ChatGPT-Api\DBContext\LoggingContext.cs
	namespace 	
ChatGPT_Api
 
. 
	DBContext 
{ 
public 

class 
LoggingContext 
:  !
	DbContext" +
{ 
private 
readonly 
IConfiguration '
_configuration( 6
;6 7
public

 
LoggingContext

 
(

 
IConfiguration

 ,
configuration

- :
)

: ;
{ 	
_configuration 
= 
configuration *
;* +
} 	
	protected 
override 
void 
OnConfiguring  -
(- .#
DbContextOptionsBuilder. E
optionsF M
)M N
{ 	
if 
( 
! 
options 
. 
IsConfigured %
)% &
{ 
options 
. 
UseSqlServer $
($ %
_configuration% 3
.3 4
GetConnectionString4 G
(G H
$strH [
)[ \
)\ ]
;] ^
} 
} 	
public 
DbSet 
< 

ChatGPTLog 
>  
ChatGPTLogs! ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
} 
} ø
MC:\Users\shahzab.akhtar\Desktop\ChatGPT-Api\ChatGPT-Api\Controllers\OpenAi.cs
	namespace 	
ChatGPT_Api
 
. 
Controllers !
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
OpenAIController !
:" #
ControllerBase$ 2
{ 
public 
readonly 
IChatGPT  
	_IChatGpt! *
;* +
public 
OpenAIController 
(  
IChatGPT  (
	_iChatGpt) 2
)2 3
{ 	
	_IChatGpt 
= 
	_iChatGpt 
;  
} 	
[ 	
HttpGet	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
async 
Task 
< 
IActionResult '
>' (

UseChatGPT) 3
(3 4
string4 :
query; @
)@ A
{ 	
var   
results   
=   
await   
	_IChatGpt   (
.  ( )

UseChatGPT  ) 3
(  3 4
query  4 9
)  9 :
;  : ;
return!! 
Ok!! 
(!! 
Regex!! 
.!! 
Replace!! #
(!!# $
results!!$ +
,!!+ ,
$str!!- C
,!!C D
$str!!E G
)!!G H
)!!H I
;!!I J
}%% 	
}&& 
}'' 